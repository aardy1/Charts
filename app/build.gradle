plugins {
    id "application"
    id "org.openjfx.javafxplugin" version "0.1.0"
    id 'com.gluonhq.gluonfx-gradle-plugin' version '1.0.21'
}

repositories {
    maven { url 'https://repo.osgeo.org/repository/release/' }
    maven { url 'https://repo.osgeo.org/repository/snapshot/' }
    maven { url 'https://nexus.gluonhq.com/nexus/content/repositories/releases/' }
    maven { url 'https://jitpack.io' }
    mavenCentral()
}

application {
//    mainClassName = "org.knowtiphy.charts.ios.KnowtiphyChartsMobile"
    mainClassName = "org.knowtiphy.charts.KnowtiphyCharts"
    applicationDefaultJvmArgs = ['-Xms2G', '-Xmx2G']
}

java {
    toolchain {
        languageVersion.set(JavaLanguageVersion.of(17))
    }
}

compileJava {
//    options.compilerArgs.addAll(['-Xlint'])
}

javafx {
    version = "21"
    modules = ['javafx.base', 'javafx.graphics', 'javafx.controls', 'javafx.web', 'javafx.fxml']
}

def buildTarget = findProperty('target') ?: 'host'
println("Build target = " + buildTarget)

gluonfx {

    target = buildTarget

    //verbose = true
    enableSwRendering = false

    release {
        description = "Knowtiphy Charts"

        // Android
        appLabel = "Knowtiphy Charts Droid"
        versionCode = "1"
        versionName = "1.0"
        providedKeyStorePath = ""
        providedKeyStorePassword = ""
        providedKeyAlias = ""
        providedKeyAliasPassword = ""

        // MacOS/iOS
        bundleName = "Knowtiphy Charts"
        bundleVersion = "0.0.9"
        appIdentifier = findProperty('appIdentifier')
        providedSigningIdentity = findProperty('providedSigningIdentity')
        skipSigning = false

        // iOS sim
        simulatorDevice = "iPhone 15"
    }
}

tasks.withType(JavaExec) {
    enableAssertions = true
}

dependencies {

    implementation project(':shapemap')

    implementation libs.geotools.shapefile
    implementation libs.geotools.sld
    implementation libs.geotools.metadata

    implementation libs.fx.base
    implementation libs.fx.graphics
    implementation libs.fx.controls

    implementation libs.commons.lang3
    implementation libs.stax.api

    implementation libs.reactfx
    implementation libs.controlsfx
    implementation libs.preferencesfx
    implementation libs.fxsvgimage
}

// attachConfig {
//     version = "$attach"
//   services 'display', 'lifecycle', 'statusbar', 'storage', 'position'
// }
//javaStaticSdkVersion = "17"
//javafxStaticSdkVersion = "21" // "22.1.0.1-Final"
//compilerArgs = ["-mmacosx-version-min=11"]
// linkerArgs may also need something like this "-mmacosx-version-min=12"
//bundleShortVersion = "BUND_NAME_SHORT"
//    implementation libs.connect
//   implementation libs.indriya
//implementation 'javax.measure:unit-api:2.0'